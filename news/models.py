# news/models.py

# ============================================================
# Імпорт модулів Django для створення моделей
# ============================================================
from django.db import models
from datetime import datetime


# ============================================================
# Модель Articles — описує структуру таблиці статей у базі даних
# ============================================================
class Articles(models.Model):
    """
    Модель для зберігання статей (новин) на сайті.
    Поля:
    - title: назва статті
    - anons: короткий анонс статті
    - full_text: повний текст статті
    """

    # Поле для назви статті (CharField обмежує кількість символів до 50)
    # Параметр default="" — якщо поле не заповнене, ставимо порожній рядок
    title = models.CharField('Назва', max_length=50, default="")

    # Поле для анонсу статті (короткий опис, до 250 символів)
    anons = models.CharField('Анонс', max_length=250, default="")

    # Поле для повного тексту статті (TextField дозволяє зберігати великий текст)
    full_text = models.TextField('Стаття')

    date = models.DateTimeField('Дата публікації', default=datetime.now)


    # ============================================================
    # Метод __str__ — задає гарне відображення об'єкта в адмінці та при виводі
    # ============================================================
    def __str__(self):
        # При виведенні об'єкта Articles виводимо "Новина: <назва>"
        return f'Новина: {self.title}'

    def get_absolute_url(self):
        return f"news/{self.id}"

    # ============================================================
    # Meta-клас для додаткових налаштувань моделі
    # ============================================================
    class Meta:
        verbose_name = 'Новость'         # Як об'єкт буде називатися в однині в адмінці
        verbose_name_plural = 'Новости'  # Як об'єкт буде називатися в множині в адмінці
